{"version":3,"sources":["components/DarkModeSwitcher/DarkModeSwitcher.js","components/DarkModeSwitcher/index.js","components/Navbar/Logo.js","components/Navbar/LangSelector.js","components/Navbar/Menu.js","components/Navbar/MobileMenu.js","components/Navbar/HamburgerIcon.js","components/Navbar/ahmedbelaid.png","components/Navbar/Navbar.js","components/Navbar/index.js"],"names":["DarkModeSwitcher","onClose","useContext","ThemeContext","isDarkMode","setIsDarkMode","t","useTranslation","FormControlLabel","control","Switch","checked","name","color","onChange","label","makeStyles","theme","root","cursor","languages","code","country_code","useStyles","profileMenu","backgroundColor","palette","primary","main","marginTop","boxShadow","shadows","menuItem","backgroundSecondary","flagIcon","marginRight","spacing","LangSelector","props","classes","useState","anchorEl","setAnchorEl","handleClose","i18n","changeLanguage","currentLanguage","find","elem","Button","variant","onClick","e","currentTarget","className","KeyboardArrowDownSharp","style","id","open","Boolean","keepMounted","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","disableScrollLock","MenuItem","smoothScrollProps","spy","smooth","offset","duration","AnimatedLink","React","forwardRef","ref","motion","div","custom","animate","wrapper","display","alignItems","tabs","navMenuItem","StyledTab","withStyles","transition","minWidth","text","Tab","disableRipple","StyledTabs","indicator","maxWidth","Tabs","TabIndicatorProps","children","Menu","homeIsActive","value","setValue","isScrolling","setIsScrolling","isLoading","LoaderContext","controls","useAnimation","useEffect","Events","scrollEvent","register","to","element","start","opacity","y","i","delay","spyHandleChange","index","indicatorColor","textColor","event","newValue","component","onSetActive","onSetInactive","MuiLink","href","underline","marginLeft","drawer","background","default","list","width","fullList","listItem","justifyContent","padding","btnContainer","active","MobileMenu","onOpen","listItemProps","button","Link","onKeyDown","activeClass","Drawer","anchor","paper","role","List","ListItem","Divider","container","overflow","flexDirection","line","height","secondary","line1","marginBottom","line2","line3","HamburgerIcon","isOpen","rest","variants","initial","rotate","x","navbar","toolbar","isMobile","Navbar","useMediaQuery","loaderContext","useTheme","scroll","setScroll","mobileNavIsOpen","setMobileNavIsOpen","window","addEventListener","scrollY","appbarVariants","scrolled","navbarHeight","type","stiffness","damping","AppBar","position","Toolbar","src","ahmedbelaid","alt","Hidden","smDown","mdUp"],"mappings":"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","file":"static/js/12.192b8517.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\nimport ThemeContext from \"../../contexts/themeContext\";\nimport { useTranslation } from \"react-i18next\";\n\nconst DarkModeSwitcher = ({ onClose }) => {\n    const { isDarkMode, setIsDarkMode } = useContext(ThemeContext);\n    const { t } = useTranslation()\n    return (\n        <FormControlLabel\n            control={\n                <Switch\n                    checked={isDarkMode}\n                    name=\"checkedDarkMode\"\n                    color=\"#2626262\"\n                    onChange={() => {\n                        if (onClose) {\n                            onClose();\n                        }\n                        setIsDarkMode(!isDarkMode);\n                    }}\n                />\n            }\n            label={t('dark_mode')}\n        />\n    );\n};\n\nexport default DarkModeSwitcher;\n","import DarkModeSwitcher from \"./DarkModeSwitcher\";\n\nexport default DarkModeSwitcher","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\nimport Ahmed from \"../../assets/images/ahmedbelaid\";\n\nconst Logo = ({ setHomeIsActive, ...rest }) => {\n    const classes = useStyles();\n    return (\n        <Link\n            spy\n            smooth\n            duration={500}\n            offset={-70}\n            href=\"/\"\n            onSetActive={() => setHomeIsActive(true)}\n            onSetInactive={() => setHomeIsActive(false)}\n            className={classes.root}\n        >\n            <img {...rest} />\n        </Link>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        cursor: \"pointer\",\n    },\n}));\n\nexport default Logo;\n","import React, { useState } from \"react\";\nimport { makeStyles, Menu, MenuItem, Button } from \"@material-ui/core\";\nimport { KeyboardArrowDownSharp } from \"@material-ui/icons\";\nimport i18n from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nconst languages = [\n    {\n        code: \"fr\",\n        name: \"FR\",\n        country_code: \"fr\",\n    },\n    {\n        code: \"en\",\n        name: \"EN\",\n        country_code: \"gb\",\n    },\n];\n\nconst LangSelector = (props) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleClose = (code) => {\n        i18n.changeLanguage(code);\n        setAnchorEl(null);\n        if (props.onClose) {\n            props.onClose();\n        }\n    };\n\n    const currentLanguage = languages.find((elem) => elem.code === t(\"language\"));\n\n    return (\n        <div {...props}>\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => setAnchorEl(e.currentTarget)}>\n                {currentLanguage && (\n                    <>\n                        <span className={`flag-icon flag-icon-${currentLanguage.country_code} ${classes.flagIcon}`} />\n                        {currentLanguage.name}\n                    </>\n                )}\n                <KeyboardArrowDownSharp style={{ color: \"white\" }} />\n            </Button>\n            <Menu\n                id=\"profile-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={() => setAnchorEl(null)}\n                keepMounted\n                elevation={0}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"center\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\",\n                }}\n                className={classes.profileMenu}\n                disableScrollLock\n            >\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"en\")}>\n                    <span className={`flag-icon flag-icon-gb ${classes.flagIcon}`} />\n                    EN\n                </MenuItem>\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"fr\")}>\n                    <span className={`flag-icon flag-icon-fr ${classes.flagIcon}`} />\n                    FR\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    profileMenu: {\n        \"& .MuiPaper-root\": {\n            backgroundColor: theme.palette.primary.main,\n            marginTop: \"2px\",\n            boxShadow: theme.shadows[4],\n        },\n    },\n    menuItem: {\n        \"&:hover\": {\n            backgroundColor: theme.backgroundSecondary,\n        },\n    },\n    flagIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport default LangSelector;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Tab, Tabs, Button, makeStyles, withStyles, Link as MuiLink } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { Link, Events } from \"react-scroll\";\nimport LangSelector from \"./LangSelector\";\nimport LoaderContext from \"../../contexts/loaderContext\";\nimport { useTranslation } from \"react-i18next\";\n\nconst smoothScrollProps = {\n    spy: true,\n    smooth: true,\n    offset: -70,\n    duration: 500,\n};\n\nconst AnimatedLink = React.forwardRef((props, ref) => (\n    <motion.div ref={ref} custom={props.custom} animate={props.animate}>\n        <Link {...smoothScrollProps} {...props} />\n    </motion.div>\n));\n\nconst Menu = ({homeIsActive}) => {\n    const classes = useStyles();\n    const [value, setValue] = useState(false);\n    const [isScrolling, setIsScrolling] = useState(false);\n    const { isLoading } = useContext(LoaderContext);\n    const controls = useAnimation();\n    const { t } = useTranslation()\n\n    useEffect(() => {\n        Events.scrollEvent.register(\"begin\", (to, element) => {\n            setIsScrolling(true);\n        });\n\n        Events.scrollEvent.register(\"end\", (to, element) => {\n            setIsScrolling(false);\n        });\n    });\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start((i) => ({\n                y: 0,\n                opacity: 1,\n                transition: { delay: i * 0.1 + 0.3 },\n            }));\n        } else {\n            controls.start({ opacity: 0, y: -5 });\n        }\n    }, [isLoading, controls]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const spyHandleChange = (index) => {\n        if (!isScrolling) {\n            setValue(index);\n        }\n    };\n\n    useEffect(() => {\n        if (homeIsActive){\n            setValue(false)\n        }\n    }, [homeIsActive])\n\n    return (\n        <div className={classes.wrapper}>\n            <StyledTabs\n                className={classes.tabs}\n                value={value}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleChange}\n                aria-label=\"disabled tabs example\"\n            >\n                <StyledTab\n                    component={AnimatedLink}\n                    custom={0}\n                    animate={controls}\n                    to=\"about\"\n                    label={t('menu_about')}\n                    onSetActive={() => spyHandleChange(0)}\n                    onSetInactive={()=>spyHandleChange(false)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={1}\n                    to=\"experience\"\n                    label={t('menu_experience')}\n                    onSetActive={() => spyHandleChange(1)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={2}\n                    to=\"projects\"\n                    label={t('menu_projects')}\n                    onSetActive={() => spyHandleChange(2)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={3}\n                    to=\"contact\"\n                    label={t('menu_contact')}\n                    onSetActive={() => spyHandleChange(3)}\n                />\n            </StyledTabs>\n            <motion.div custom={4} animate={controls}>\n                <Button\n                    component={MuiLink}\n                    href=\"https://publuu.com/flip-book/59153/173725\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    underline=\"none\"\n                >\n                    {t('menu_resume')}\n                </Button>\n            </motion.div>\n            <motion.div custom={5} animate={controls}>\n                <LangSelector style={{ marginLeft: \"32px\" }} />\n            </motion.div>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    tabs: {\n        marginRight: theme.spacing(4),\n    },\n    navMenuItem: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst StyledTab = withStyles((theme) => ({\n    root: {\n        transition: \".2s\",\n        minWidth: 120,\n        \"&:hover\": {\n            color: theme.palette.text.primary,\n        },\n    },\n}))((props) => <Tab disableRipple {...props} />);\n\nconst StyledTabs = withStyles({\n    indicator: {\n        \"& > span\": {\n            maxWidth: 20,\n        },\n    },\n})((props) => <Tabs {...props} variant=\"fullWidth\" TabIndicatorProps={{ children: <span /> }} />);\n\nexport default Menu;\n","import React from \"react\";\nimport { makeStyles, Drawer, List, Button, Divider, ListItem, Link as MuiLink } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\nimport DarkModeSwitcher from \"../DarkModeSwitcher\";\nimport LangSelector from \"./LangSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst MobileMenu = ({ open, onClose, onOpen }) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const listItemProps = {\n        button: true,\n        component: Link,\n        onClick: onClose,\n        onKeyDown: onClose,\n        spy: true,\n        smooth: true,\n        offset: 0,\n        duration: 500,\n        className: classes.listItem,\n        activeClass: classes.active,\n    };\n\n    return (\n        <Drawer anchor=\"left\" open={open} onClose={onClose} classes={{ paper: classes.drawer }}>\n            <div className={classes.list} role=\"presentation\">\n                <List className={classes.fullList}>\n                    <ListItem {...listItemProps} to=\"about\">\n                        {t('menu_about')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"experience\">\n                        {t('menu_experience')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"projects\">\n                        {t('menu_projects')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"contact\">\n                        {t('menu_contact')}\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <Button\n                            component={MuiLink}\n                            href=\"https://publuu.com/flip-book/59153/173725\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            underline=\"none\"\n                            >\n                            {t('menu_resume')}\n                        </Button>\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <LangSelector onClose={onClose} />\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <DarkModeSwitcher onClose={onClose} />\n                    </ListItem>\n                    <Divider />\n                </List>\n            </div>\n        </Drawer>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        backgroundColor: theme.palette.background.default,\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: \"auto\",\n        marginTop: theme.spacing(4),\n    },\n    listItem: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: theme.spacing(2, 0),\n        \"&:hover\": {\n            backgroundColor: \"rgb(80,80,80)\",\n        },\n    },\n    btnContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: theme.spacing(1),\n    },\n    active: {\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nexport default MobileMenu;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\n\nconst HamburgerIcon = ({isOpen,...rest}) => {\n    const controls = useAnimation()\n    const classes = useStyles();\n    useEffect(() => {\n        if (isOpen) {\n            controls.start(\"animate\")\n        } else {\n            controls.start(\"initial\")\n        }\n    }, [isOpen,controls]);\n    return (\n        <motion.div className={classes.container} {...rest}>\n            <motion.div className={`${classes.line} ${classes.line1}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:45,y:9}}} animate={controls}></motion.div>\n            <motion.div className={`${classes.line} ${classes.line2}`} variants={{initial:{x:0,opacity:1}, animate:{x:250,opacity:0}}} animate={controls}></motion.div>\n            <motion.div className={`${classes.line} ${classes.line3}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:-45,y:-9}}} animate={controls}></motion.div>\n        </motion.div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        overflow:'hidden',\n        display:\"flex\",\n        flexDirection:\"column\",\n        alignItems:\"flex-end\",\n        cursor:\"pointer\",\n        padding:\"2px\"\n    },\n    line: {\n        height: \"3px\",\n        backgroundColor: theme.palette.text.secondary,\n    },\n    line1: {\n        width: \"35px\",\n        marginBottom: \"7px\",\n    },\n    line2: {\n        width: \"25px\",\n        marginBottom: \"7px\",\n    },\n    line3: {\n        width: \"35px\",\n    },\n}));\n\nexport default HamburgerIcon;\n","export default __webpack_public_path__ + \"static/media/ahmedbelaid.80be955b.png\";","import React, { useContext, useState, useEffect } from \"react\";\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport Logo from \"./Logo\";\nimport Menu from \"./Menu\";\nimport MobileMenu from \"./MobileMenu\";\nimport HamburgerIcon from \"./HamburgerIcon\";\nimport loaderContext from \"../../contexts/loaderContext\";\nimport ahmedbelaid from \"./ahmedbelaid.png\"\n\nconst Navbar = () => {\n    const [homeIsActive, setHomeIsActive]=useState(true)\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\n    const { isLoading } = useContext(loaderContext);\n    const controls = useAnimation();\n    const theme = useTheme();\n    const [scroll, setScroll] = useState(false);\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\n    const classes = useStyles({ scroll, isMobile });\n    const handleNav = () => setScroll(window.scrollY > 30);\n    window.addEventListener(\"scroll\", handleNav);\n\n    const appbarVariants = {\n        initial: { height: isMobile ? 70 : 100, boxShadow: theme.shadows[0] },\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\n    };\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start({\n                y: 0,\n                transition: {\n                    delay: 0.05,\n                    type: \"spring\",\n                    stiffness: 260,\n                    damping: 20,\n                },\n            });\n        } else {\n            controls.start({ y: -100 });\n        }\n    }, [isLoading, controls]);\n\n    return (\n        <motion.div\n            animate={controls}\n        >\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\n                <Toolbar\n                    className={classes.toolbar}\n                    component={motion.div}\n                    variants={appbarVariants}\n                    animate={scroll ? \"scrolled\" : \"initial\"}\n                    transition={{\n                        type: \"spring\",\n                        stiffness: 260,\n                        damping: 20,\n                    }}\n                >\n                    <img src={ahmedbelaid} alt=\"Logo\" href=\"/home\" width=\"130rem\"/>\n                    <Hidden smDown>\n                        <Menu homeIsActive={homeIsActive} />\n                    </Hidden>\n                    <Hidden mdUp>\n                        <HamburgerIcon isOpen={mobileNavIsOpen} onClick={() => setMobileNavIsOpen(!mobileNavIsOpen)} />\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            <Hidden mdUp>\n                <MobileMenu\n                    open={mobileNavIsOpen}\n                    onClose={() => setMobileNavIsOpen(false)}\n                    onOpen={() => setMobileNavIsOpen(true)}\n                />\n            </Hidden>\n        </motion.div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n \n    navbar: {\n        backgroundColor: theme.palette.background.default,\n    },\n    toolbar: {\n        justifyContent: \"space-between\",\n        alignItems:\"center\",\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\n    },\n}));\n\nexport default Navbar;\n","import Navbar from \"./Navbar\";\nexport default Navbar;\n"],"sourceRoot":""}